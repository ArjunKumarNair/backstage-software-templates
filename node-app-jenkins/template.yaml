apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nodejs-devsecops-template-jenkins
  title: Node Devsecops template (Jenkins)
  description: Provisions a minimalistic node application
spec:
  owner: development
  type: service

  parameters:
    - title: Fill in some steps
      required:
        - component_id
        - environment
        - folderName
      properties:
        component_id:
          title: Component name
          type: string
          description: Provide a component (microservice) name
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$'
        environment:
          title: Environment
          type: string
          description: The environment where this component will be deployed
          enum:
            - dev
            - prod
        folderName:
          title: Folder name
          type: string
          description: Provide the folder name in Jenkins

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          app_name: ${{parameters.component_id}}
          app_env: ${{parameters.environment}}

    - id: publish
      name: Publish
      action: publish:github
      input:
        description: This is ${{ parameters.component_id }}
        repoUrl: github.com?owner=arjun-mindsprint-udemy&repo=${{parameters.component_id}}
        protectDefaultBranch: false
        repoVisibility: public

    - id: jenkins-job-create
      name: Jenkins Job Create
      action: jenkins:job:create
      input:
        jobName: ${{ parameters.component_id }}
        folderName: ${{ parameters.folderName }}
        configPath: "/config.xml"

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
